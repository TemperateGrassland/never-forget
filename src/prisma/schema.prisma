generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  createdAt    DateTime   @default(now())
  dateOfBirth  DateTime?
  firstName    String
  isActive     Boolean    @default(true)
  lastName     String
  passwordHash String
  phoneNumber  String?
  updatedAt    DateTime   @updatedAt
  reminders    Reminder[]
  accounts     Account[]  // Relation to Account
  sessions     Session[]  // Relation to Session
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  provider           String
  providerAccountId  String
  type               String
  access_token       String?   // Optional fields for OAuth
  refresh_token      String?
  expires_at         Int?
  id_token           String?
  scope              String?
  token_type         String?
  session_state      String?
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId]) // Ensure unique accounts per provider
}

model Session {
  id           String   @id @default(cuid()) // Use cuid for unique string IDs
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String  @id
  token      String
  expires    DateTime

  @@unique([identifier, token]) // Ensure token uniqueness
}

model Reminder {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  scheduledAt DateTime
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}